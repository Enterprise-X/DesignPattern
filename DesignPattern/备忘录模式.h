#pragma once
#include "设计模式基类.h"

class 备忘录模式 :public 设计模式基类
{

public:
	void 运行() override;

};

/*

优点:
实现状态恢复、撤销操作的功能，用户可以恢复到指定的历史状态，让软件系统更加人性化；
备忘录封装了信息，除了原生器以外，其他对象访问不了备忘录的代码；

缺点:
资源消耗大。如果需要保存原生器对象的多个历史状态，那么将创建多个备忘录对象；或者如果原生器对象的很多状态都需要保存，也将消耗大量存储资源。
个人觉得使用数据库更好实现该功能。


适用环境:
保存一个对象的历史状态，系统需要设计回退或者撤销功能；
备忘录类可以封装一个对象的历史状态，避免对象的历史状态被外界修改。

*/
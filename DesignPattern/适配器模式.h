#pragma once
#include "设计模式基类.h"

class 适配器模式 :public 设计模式基类
{
public:
	void 运行() override;

};

/*

优点:
将目标类和适配者类解耦，引入一个适配器类实现代码重用，无需修改原有结构；
增加类的透明和复用，对于客户端而言，适配者类是透明的；
对象适配器可以把不同适配者适配到同一个目标（对象适配器）；

缺点:
对编程语言的限制：Java不支持多重继承，一次最多只能适配一个适配者类，不能同时适配多个适配者类；

适用环境:
系统需要使用一些现有的类，但这些类的接口不符合系统需要，或者没有这些类的源代码；
想创建一个重复使用的类，用于和一些彼此没有太大关联的类一起工作。

*/
#pragma once
#include "设计模式基类.h"

class 原型模式 :public 设计模式基类
{
public:
	void 运行() override;
};

/*

优点:
当创建新的对象实例较为复杂时，原型模式可以简化创建过程，提高创建对象的效率；
可扩展：模式中提供了抽象原型类，具体原型类可适当扩展；
创建结构简单：创建工厂即为原型对象本身

缺点:
深克隆代码较为复杂；
每一个类都得配备一个clone方法，且该方法位于类的内部，修改时违背开闭原则；

适用环境:
当创建新的对象实例较为复杂时，原型模式可以简化创建过程；
结合优点第3条，需要避免使用分层次的工厂类来创建分层次的对象，并且类的实例对象只有一个或很少几个的组合状态，通过复制原型对象得到新实例，比通过使用构造函数创建一个新实例会更加方便。

*/